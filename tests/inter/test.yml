---
Intersection: !S::Suite
  attributes: !S::Cmd
    command: ./tst
    exit: 0
  contents: 

######  
    - Intersection between 0 and 0:
        args: "<<pwd>>/null.ddd <<pwd>>/null.ddd '*'"
        output: "[ 0 ]\n"
      
    - Intersection between 0 and 1:
        args: "<<pwd>>/null.ddd <<pwd>>/one.ddd '*'"
        output: "[ 0 ]\n"

    - Intersection between 0 and T:
        args: "<<pwd>>/null.ddd <<pwd>>/top.ddd '*'"
        output: "[ 0 ]\n"
        
    - Intersection between 0 and (e1, alpha1):
        args: "<<pwd>>/null.ddd <<pwd>>/e1alpha1.ddd '*'"
        output: "[ 0 ]\n"

######
    - Intersection between 1 and 0:
        args: "<<pwd>>/one.ddd <<pwd>>/null.ddd '*'"
        output: "[ 0 ]\n"
      
    - Intersection between 1 and 1:
        args: "<<pwd>>/one.ddd <<pwd>>/one.ddd '*'"
        output: "[ ]\n"

    - Intersection between 1 and T:
        args: "<<pwd>>/one.ddd <<pwd>>/top.ddd '*'"
        output: "[ T ]\n"
        
    - Intersection between 1 and (e1, alpha1):
        args: "<<pwd>>/one.ddd <<pwd>>/e1alpha1.ddd '*'"
        output: "[ T ]\n"

######
    - Intersection between T and 0:
        args: "<<pwd>>/top.ddd <<pwd>>/null.ddd '*'"
        output: "[ 0 ]\n"
      
    - Intersection between T and 1:
        args: "<<pwd>>/top.ddd <<pwd>>/one.ddd '*'"
        output: "[ T ]\n"

    - Intersection between T and T:
        args: "<<pwd>>/top.ddd <<pwd>>/top.ddd '*'"
        output: "[ T ]\n"
        
    - Intersection between T and (e1, alpha1):
        args: "<<pwd>>/top.ddd <<pwd>>/e1alpha1.ddd '*'"
        output: "[ T ]\n"

######
    - Intersection between (e1, alpha1) and 0:
        args: "<<pwd>>/e1alpha1.ddd <<pwd>>/null.ddd '*'"
        output: "[ 0 ]\n"
      
    - Intersection between (e1, alpha1) and 1:
        args: "<<pwd>>/e1alpha1.ddd <<pwd>>/one.ddd '*'"
        output: "[ T ]\n"

    - Intersection between (e1, alpha1) and T:
        args: "<<pwd>>/e1alpha1.ddd <<pwd>>/top.ddd '*'"
        output: "[ T ]\n"
        
    - Intersection between (e1, alpha1) and (e1, alpha1):
        args: "<<pwd>>/e1alpha1.ddd <<pwd>>/e1alpha1.ddd '*'"
        output: "[ A(1) B(1) ]\n[ A(2) B(1) ]\n"

    - Intersection between (e1, alpha1) and (e1, alpha2):
        args: "<<pwd>>/e1alpha1.ddd <<pwd>>/e1alpha2.ddd '*'"
        output: "[ A(1) B(1) ]\n"

    - Intersection between (e1, alpha1) and (e2, alpha3):
        args: "<<pwd>>/e1alpha1.ddd <<pwd>>/e2alpha3.ddd '*'"
        output: "[ 0 ]\n"
