# AC_INIT (package, version, [bug-report], [tarname])
AC_INIT(DDD,1.4,[Yann.Thierry-Mieg@lip6.fr])

# We use automake to build makefiles
AM_INIT_AUTOMAKE(-Wall)

# programs used to build
# we make static libs (use ranlib)
AC_PROG_RANLIB

# we compile C++
# set Cxx compilation flags to either the value passed in
# ./configure --cxxflags=
# or none to change behavior from default cxx flags generated by autoconf
# default : -02 -g
#CXXFLAGS=${CXXFLAGS-} 
test -z "$CFLAGS" && CFLAGS=
test -z "$CXXFLAGS" && CXXFLAGS=

#compile in C++
AC_PROG_CXX

AC_ARG_ENABLE(	[reentrant],
        [AC_HELP_STRING([--enable-reentrant],[turn on on thread-safe mode])],
        [  case "${enable_reentrant}" in
            yes) AC_DEFINE([REENTRANT],1,[Define if you want a thread-safe library.])
                ;;
            no)
                ;;
            *)
                ;;
            esac])


AC_ARG_ENABLE(	[parallel],
        [AC_HELP_STRING([--enable-parallel],[turn on on parallel mode])],
        [  case "${enable_parallel}" in
            yes) parallel=true
                 AC_DEFINE([PARALLEL_DD],1,[Define if you want parallel code.])
                 AC_DEFINE([REENTRANT],1,[Define if you want a thread-safe library.])
                ;;
            no)  parallel=false
                ;;
            *)  AC_MSG_ERROR(Bad value ${enableval})
                ;;
            esac],
            [parallel=false])

AM_CONDITIONAL( [PARALLEL], [test "x$parallel" = "xtrue" ])

AC_CONFIG_FILES([   Makefile
                    demo/Makefile
                    demo/hanoi/Makefile
                    demo/expr/Makefile
                    src/Makefile])
                    # doc/Doxyfile
                    # doc/Makefile])

# Do it !! (mandatory)
AC_OUTPUT
